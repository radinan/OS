  |-------|
<-+ Shell +->
  |-------|

echo $SHELL		- дава текущия шел
echo -e			- разпознава спец. символи
echo -n			- без нов ред
read			- input (създава shell за променливи)
read var var1		- чете до делимитър (до whitespace във var1, вс др във var2 и тн)
source source_me	- изпълнява файла(съдърж) като валидни команди
     . source_me	- ...
     
echo $PS1		- спец променлива, която дефинира prompt(това вляво)
export PS1="pr:"	- дефиниране
PS1=pr			- ...	 

alias ll='ls -la'	-винаги в нач на реда
history			-история за вс

seq 1 100	- дава числата от 1 до 100
seq 1 3 10	- дава числата от 1 до 10 през 3
seq -w 1 2 15 	- подравнява ги

( ... )		- subshell (дете; не променя бащата)
.. | ... 	- ... e subshell
<( cmds )	- ФД чете stdout на cmds
>( cmds )	- cmds четат от ФД


grep -H     <( cat astero-banner.txt )		#/dev/fd/63:
grep -H _ < <( cat astero-banner.txt ) 		#standard input

echo testing > >( grep -H test )		#(standard input):testing
echo testing >( grep -H test)			#testing /dev/fd/63
							 #това е файла

________________
| °Променливи° |
|______________|____________________
| var=50			   |
| $var		- при използване   |
| echo $var	- вади 50	   |
|__________________________________|

var=string	 
echo $var	- вади string 
var=string2	- нова ст-т
echo $var1	- вади string2

var="two words"	- спейсове, оградени с ""

var="Student"
vara="Teacher"

echo "$vara"	- ->Teacher 
echo "${var}aa"	- ->Studentaa
echo "${vara}a"	- ->Teachera

файлове: aa, bb, aa bb 
var="aa bb"

cat  $var 	-> cat aa bb	- съдърж на aa и bb
cat "$var"	-> cat "aa bb"	- съдърж на  aa bb
__________________________________
|			      	 |
|      °°shell променливи°°	 |
|	    (дете->не)		 |
|				 |
|  °°environmental променливи°°	 |
|	    (дете->да)		 |
|      export var="Env var"	 |
|________________________________| 




$(( ))			- arithmetic expansion
var=5
$(( $var + 5 ))

test 5 -eq 5		- сравнява числа
[ 5 -eq 5 ]		- ...

test string = string	- сравнява стрингове
[ string = string ]	- ...

test -e case.sh		- does exist
test -f case.sh		- is file
test -d case.sh		- is directory
test -r case.sh		- is readable
test -x case.sh		- is executable
test -w case.sh		- is writable

$?	- exit status на последната команда, приключила работата си
true	- винаги успех
false	- винаги неуспех
exit 1	- exit status 1

&&	- и
||	- или
	
	
	
	
~||=========||~
 ||  shell  ||
 || scripts ||
~||=========||~

vi script.sh 		- създаване на скрипт
chmod 744 script.sh	- даваме execute perms
./script.sh		- даваме път до него

_______________
| #!/bin/bash | <-задължителен 1ви ред!
|  >code<     |
|_____________|

$1	- първи  cmd line аргумент
$2	- втори
$3	- трети
$@	- всички cmd line аргументи
$*	- ...
$#	- бр. на cmd line аргументите
shift	- n-тият елемент = n+1

"$@"	- "$1" "$2" "$3" ... 
"$*" 	- "$1 $2 $3 ..."

"" - escape-ват спец значение на space
'' - принти буквално символи без спец значение


____________________
|      °~if~°	   |
|__________________|
| if   <cmd>; then |
|	 <body>    |
| elif <cmd>; then |
|	 <body>    |
| else		   |
|	 <body>    |
| fi		   |
|__________________|


 _________________________
|       °~case~°	 |
|________________________|
| case $var in		 |
|	<pattern1>)	 |
|		<body1>	 |
|	;;		 |
|			 |
|	<pattern2>)	 |
|		<body2>  |
|	;;		 |
|			 |
|	...		 |
|			 |
|	<patternN>)	 |
|		<bodyN>  |
|	;;		 |
| esac			 |
|________________________|


_________________________________
|      	     °~for~°            |
|_______________________________|
| for <variable> in <list>; do  |
|	<body>		        |
| done			        |
|_______________________________|

____________________
|     °~while~°	   |
|__________________|
| while <cmd>; do  |
|	<body>	   |
| done		   |
|__________________|

break [n]	- прекъсва изпълнението на цикъла
continue [n]	- прекъсва итерацията на цикъла => следващата

[n] - колко nest-нати цикъла да бъдат афектирани

________________________
|     °~function~°     |
|______________________|
| function_name () {   |
|	<body>	       |
| }		       |
|______________________|

unset function_name	- спира да е ф-я
declare -f 		- дава вс ф-ии, които са декларирани ( и дефинициите им)
