-1-----------------------------------------------------
whoami	-- username
id -u	-- UID
tty		-- име на terminal-a
su		-- switch user
sudo	-- (super user do)=root
man 	-- help page
pwd		-- print working directory

cd		-- change directory
cd ~	-- change to home directory
cd -	-- change to previously visited directory 
cd ..	-- change to parent of current directory

touch	-- create file (change mtime/atime)
mkdir	-- create directory

-2--------------------------------------------------
ls		-- list
ls -l	-- detailed list
ls -a	-- +hidden files (starting with .)
ls -la	-- info for given directory

chown	-- change owner of a file (we must be root)
chgrp	-- change group of a file
chmod 	-- change permissions (file/dir)

rmdir 	-- remove empty dir
cp		-- copy 
cp -r	-- move dir
mv		-- move file
rm		-- delete file
rm -r	-- remove recursively

df		-- (disk free) usage of FS
df -h	-- human readable format
df -i	-- used Inodes

du				-- (disk usage)
du --max-depth	-- sumarised info
du -h 			-- human readable

stat	-- info for file-dir (more detailed than ls)

-3------------------------------------------------------------
ln -s file symlink
stat symlink			-- info for the symlink
stat -L symlink			-- info for the linked file
stat -c "%a %s %n" file	-- formatting the otput (numeric perms; size in bytes; name ...)
						-- (like printf)

file path		-- file's format + info
file txtfile	-- ACII text
file symlink	-- symlink to the file (otherwise broken symlink)

cat			-- (concatenate) gets 1 or > files and prints content
cat -n		-- numerated output (order in the output; not in the file!)
cat -		-- reads from its stdin

head		-- print the beginning (by def first 10 lines)
head -n 7 	-- print first 7 lines
head -n +4 	-- ^
head -n -4	-- all except last 4 lines

tail		-- print the end (by def last 10 lines)
tail -n 7	-- print last 7 lines
tail -n -4 	-- ^
tail -n +4	-- all except first 4 lines
tail -f 	-- always show lines in a currently edited file (ex: log files)

xxd			-- give info for file's content (hex + ascii representation)

xargs						-- (its)stdin ---> (cmd's)command line
xargs -n 2 					-- limit the count of the arguments
xargs -I {} cmd {} file 	-- second {} will be replaced with the xargs's stdin
xargs -0					-- \0 is delimiter

find [options][starting-point][expression]	

tar -cf file.tar 1 2 3	-- (create files)  archive 1 2 3 in file.tar
tar -xf	file.tar		-- (extract files) unarchive file.tar
tar -cJf copressed 1 2 	--  archive and compress with XZ

xz file			--   compress file
unxz file.xz	-- uncompress file

-4---------------------------------------------------------
find /etc -type -f								-- all files from /etc
find /etc -type -f -exec stat -c "%n %s" {} \;	-- name & size 4 every object of find
# -exec cmd \;	--syntax for exec (escaping ;)


<				~/redirect stdin/~
cmd < file 				
cat < file				-- cat reads from file
cat file - file			-- read file; stdin; file
cat file - file < file1	-- read file; file1; file
cat file1 < file2		-- prints only file1 (stdin=file2 is not used)

>				~/redirect stdout/~
file descriptor > file/&file descriptor	
cat file				-- prints file
cat file > file1		-- print file in file1
cat file 1> file1		-- ^
cat file file > file1	-- print 2xfile in file1 (if no file1 => create)(trunc)

2> 				~/redirect stderr/~
cat file 2> file1		-- error messages are saved in file1

.					~/combined/~
cat yes no 2> stderr 1> stdout		-- yes->stdout; no(errors)->stderr
cat no 2> stderr 1> stdout < yes	-- yes->stdout, no(errors)->stderr

>>				~/+appending/~
file_descriptor >> file/&file_descriptor
cat yes >> stdappend		-- same as > but appending

2>>
cat no 2>> stderrappend		-- same as 2> but appending

&file_descriptor
cat yes no 1> out 2>&1	-- redirect stderr -> out (stdout->out)
cat yes no 2>&1 1> out	-- redirect stderr -> terminal (stdout->terminal at this point)

&>
cat yes no &> both 			-- redirect stdout & stderr
cat yes no 2> both 1>&2		-- ^
cat yes no 1> try  2> try	-- redirect only stderr


left_cmd | right_cmd	-- (left_cmd)stdout -> (right_cmd)stdin

head -n 17 numbers | tail -n 1				-- take 17th line
cat yes - no 2>err < in | head -n 15 > wtf	-- first 15 lines from yes+in


paste	-- merges files by columns

wc file 		--(words count) statistic for count of lines, words, bytes
wc				-- on stdin //no arguments
wc file1 file2	-- statistic for file1, file2 & for both
wc -l file		-- line count
wc -w file		-- word count
wc -c file 		-- byte count
wc -m file		-- symbols count

cat /etc/passwd | wc -l	-- count of lines in a file
wc -l /etc/passwd		-- ^ + name






