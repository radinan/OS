ln -s pesho symlink
stat symlink - дава инф за самия симлинк, а не за файла, който сочи
stat -L symlink - дава инф за сочения файл
stat -c "%a %s %n" pesho - задаваме формати като желани за аутпута (perm в цифри, големина в байтове, име и т.н.)
stat -c "Perms: %a Size: s% Name: %n" pesho - като printf (Perms: 644 Size: 41 Name: pesho)

----------------------------------------------------------------------------------------
File extensions
(в gnu linux типът на файла няма общо с екстеншъна)
(не са значещи)

за да може файл да се използва м/у повече хора, тр има конвенция - какво пише вътре
какво е съдърж - зависи от интерпретацията на байтовете
има patterns

mime magic - опитва се да матчне съдържанието с някой pattern (ако да => избира типа)
(база данни с мн различни формати)

в windows -> pesho.txt =>  жокер, че се интерпрет като текстов
в linux   -> mime magic


file /usr/bin/passwd - казва формата на файла, който гледаме + още инфо
file pesho - дава ASCII text
file symlink - дава symbolic link to pesho (ако е към несъществуващ дава broken symbolic link)

--------------------------------------------------------------------------------------------------
Работа със съдържание на текстови файлове

(ако cat-нем нетекстов файл и ни бъгне терминала -> reset или clear (ctrl + l))
cat - (concatenate) приема 1 или повече имена и принти съдържанието
cat pesho new_file
cat -n pesho - номерирам output (Име на ред) ; номер в аутпута, а не в самия файл
cat pesho - new_file - чете от стдин, принти го и при "enter" принти нататък файловете

head - дава началото (по default Първите 10)
head -n 7 test - дава първите 7 реда
head -n +4 test - нормално
head -n -4 test - вс освен последните 4

tail - дава края  (по default Последните 10)
tail -n 7 test - дава последните 7 реда
tail -n +4 test - вс освен първите 4
tail -n -4 test - нормално
tail -f test - винаги, когато се запише нов ред, ни се показва на output-a (примерно при Log file)

more - (pager) позволява да гледаме като страници (по-лесно)
less - (pager) по-мощна версия на more (man работи с less)

--------------------------------------------------------------------------------------------------------

xxd name - приема име на файл, за който файл дава инф за съдърж. (съдърж за всякакви файлове)

(3 смислови части)
1-(offset на съотв байт, за който xxd дава инф във 2 колонка; 16тично)
2-(на 8 части; вс с hex репрезентацията на 2 поредни байта)
  (72 - hex на ст-т на първия байт, 6f - на втория байт, 6f - на трети байт и тн)
3-(репрезентация по аски таблицата)
  (printable chars    - в аски таблицата)
  (non-prinable chars - принти точки)

00000000: 726f 6f74 3a78 3a30 3a30 3a72 6f6f 743a root:x:0:0:root:
00000010:                   ...                       .....
и т.н.

------------------------------------------------------------------------------------------

xargs - чете от своя стдин и подава на command line на командата
xargs cat -n 
	     - 
	     (чака инпут: example
		     	  new_file
		          pesho) 
=> все едно cat -n example new_file pesho
	
xargs cat -n
1
2
3
4
5
	1 1
	2 2
	3 3
	4 4
	5 5
			
xargs -n 2 cat -n - ограничава колко най-мн аргументи да се подадат наведнъж
1
2
	1 1
	2 2
3
4
	1 3
	2 4
5
	1 5

xargs -I {} cp {} test - вторите {} ще се заместят със стдин-а на xargs
=> cp 1 2 3 4 5 test

xargs -0 - разделител е терм. нула

---------------------------------------------------------------------------------------------------
       опции     от къде търси       у-я
find [options] [starting-point] [expression]- намиране на обекти, които отг на условия

-------------------------------------------------------------------------------------

> archiving - от мн на бр файлове получаваме 1
tar -cf file.tar 1 2 3 4 5 - create, files , във file.tar арх 1 2 3 4 5
tar -xf file.tar - eXtract, files, разархивиране
tar -cJf compressed_Archive 1 2 3 4 5 - архивира и компресира с XZ

> compmressing - репрезентираме еднозначно количество файлове в по-малко 
xz name - Компресира файл
unxz name.xz - разкомпресира



